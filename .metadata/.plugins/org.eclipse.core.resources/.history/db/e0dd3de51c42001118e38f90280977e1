package aprendQ;

import agente.Agente;
import ambiente.Accao;
import ambiente.Coordenada;
import ambiente.ElemAgente;
import ambiente.Accao.Tipo;

public class AgenteAprend extends Agente
{
	private final double MAX_REFORCO;
	private ElemAgente perProp;
	private MecAprendQ<Coordenada> mecAprend;
	private Accao a;
	private Coordenada s;
	private Coordenada sn;
	
	public AgenteAprend(){
		MAX_REFORCO = 100;
	}

	@Override
	public void agir()
	{
		if(perProp.isCarga())
		{
			getAmb().reIniciar();
			a = null;
		}
		
		if(a != null) {
			getActuador().actuar(a);
		}
	}

	@Override
	public void iniciar()
	{
		Accao[] accoes = Accao.gerarAccoes(Tipo.PEGAR);
		mecAprend = new MecAprendQ<>(accoes,0.9,0.8,0.1);
	}

	@Override
	public void percepcionar() {
		perProp = this.getSensorProprio().detectar();
	}

	@Override
	public void processar() {
		sn = perProp.getPosicao();
		
		if(a != null) {
			double r = gerarReforco(perProp);
			mecAprend.assimilar(s,a,sn,r);
		}
		
		s = sn;
		a = mecAprend.selAccao(sn);
	}
	
	private double gerarReforco(ElemAgente argPerProp) {
		if(argPerProp.isCarga())
		{
			return MAX_REFORCO;
		}
		else 
			if(argPerProp.isColisao())
			{
				return -MAX_REFORCO;
			}
			else
			{
				return -s.dist(sn); 
			}
	}
}
